---
title: "PostgreSQL replication/backup+restore with IPv6-only"
author: "Philipp BÃ¼hler, sysfive.com GmbH"
date: 'hack4glarus - Diesbach - Jul, 9th, 2023'
format:
  revealjs:
    theme: [league, style.scss]
    menu: true
    slide-number: true
    preview-links: auto
    show-slide-number: speaker
    slide-tone: false
    transition: fade
    transition-speed: slow
    background-transition: convex
    footer: "hack4glarus 2023 - Diesbach - pgsql/IPv6"
    logo: img/sysfive.jpg
---
## What's ahead

:::: {.columns}
::: {.column width="50%"}

### Infrastructure
### PostgreSQL setup
### Replication: Streaming
### Replication: WAL shipping
### Backup/Restore
### Status + Outlook
:::
::: {.column width="50%"}

- smtp: pb@sysfive.com
- twitter: pb_double  ; mastodon: double_p
- matrix/irc: double-p
:::
::::

<!-- Page -->
## Infrastructure
Network

  - one prefix only: 2a0a:e5c0:2:12::/64
  - routed between nodes wont matter (FLW)

VM: 1 vCPU; 4GB RAM; 10GB disk

  - `pg1` Data/Clusternode
  - `pg2` Data/Clusternode
  - `pg3` Data/Clusternode
  - `bm0` Backup / Datasink

Installation ansible powered

<!-- Page -->
## PostgreSQL setup

- postgresql-14
- repmgr (pgX)
- barman (bm0)
- pgLoader (bm0)

- Follow this series https://www.youtube.com/watch?v=XFawRsNdfok&list=PLpNYlUeSK_rnanDUNr4KiTlkLTmtqK-sQ

<!-- Page -->
## PostgreSQL / barman
- Install/Configuration from ansible playbook

Handling:

- `barman check pg1`
- `barman receive-wal pg1`
- `barman backup pg1`
- `barman switch-wal --force --archive pg1` 

<!-- Page -->
## PostgreSQL / repmgr
- Install/Configuration from ansible playbook

Handling:

- `repmgr primary register` (pg1)
- `repmgr -h pg1 -U repmgr -d repmgr -F standby clone #--dry-run` (pg2+3)
- `repmgr standby register` (pg2+3)
- `repmgr cluster show`

<!-- Page -->
## Replication:
::: {.callout-tip title="Working"}
- postgresql streaming
- barman -> postgres (receive WAL stream)
- repmgr -> barman (fetch WALs + basebackup)
:::

Do not forget .pgpass if not using `trust` in pg_hba.conf #untested


<!-- Page -->
## Helpers

:::{.callout-important title="Not orking"}
- pgloader; likely "only" a connstring issue (GH issue since 09/2018+06/2019 ..)

only needed for loading testdata, not replica/backup operations itself
:::


<!-- Page -->
## cluster status
```{.python code-line-numbers="4-6"}
postgres@pg1:~$ repmgr cluster show
 ID | Name | Role    | Status    | Upstream | ...
----+------+---------+-----------+----------+-...
 1  | pg1  | primary | * running |          | ...
 2  | pg2  | standby |   running | pg1      | ...
 3  | pg3  | standby |   running | pg1      | ...
```


<!-- Page -->
## Failover/Backup/Restore
::: {.callout-tip title="Working"}
- ssh: barman@bm0 -> postgres@pgX 
- postgres@pgX -> barman@bm0
:::
For certain failover scenarios, `postgres` has to connect from
any pgX to any other pgX. Use one key for all..?

Also postgres needs passwd-less `sudo` for these commands.

Planned:
`repmgr standby switchover --siblings-follow #--dry-run`

<!-- Page -->
## Outlook, Questions & Cheers
:::: {.columns}

::: {.column width="50%"}
- Pgpool-II ?
- https://github.com/double-p/ pgSQLv6-testing
:::

::: {.column width="50%"}
Thanks to:
- ungleich.ch
- sysfive.com GmbH
:::

::::

- QUESTIONS
- Meet: next time! ..and today til 15:xx
Created with `Quarto / revealjs`  
[presentation (+testing-config)](https://github.com/double-p/)

